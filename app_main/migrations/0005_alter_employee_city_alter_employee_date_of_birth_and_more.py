# Generated by Django 5.1.6 on 2025-03-08 22:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app_main", "0004_alter_facevector_face_vector_fernet"),
    ]

    operations = [
        migrations.AlterField(
            model_name="employee",
            name="city",
            field=models.CharField(max_length=32, verbose_name="Mesto:"),
        ),
        migrations.AlterField(
            model_name="employee",
            name="date_of_birth",
            field=models.DateField(verbose_name="Datum narozeni:"),
        ),
        migrations.AlterField(
            model_name="employee",
            name="email",
            field=models.EmailField(max_length=100, unique=True, verbose_name="Email:"),
        ),
        migrations.AlterField(
            model_name="employee",
            name="is_valid",
            field=models.BooleanField(
                blank=True, default=False, verbose_name="Ucet v poradku?:"
            ),
        ),
        migrations.AlterField(
            model_name="employee",
            name="name",
            field=models.CharField(max_length=32, verbose_name="Jmeno:"),
        ),
        migrations.AlterField(
            model_name="employee",
            name="phone_number",
            field=models.CharField(
                max_length=16,
                unique=True,
                validators=[
                    django.core.validators.MinLengthValidator(5),
                    django.core.validators.RegexValidator(
                        message="Telefon musí být ve správném formátu.",
                        regex="^\\+?[0-9\\s\\-()]{5,16}$",
                    ),
                ],
                verbose_name="Telefon:",
            ),
        ),
        migrations.AlterField(
            model_name="employee",
            name="pin_code",
            field=models.CharField(
                blank=True,
                max_length=4,
                validators=[
                    django.core.validators.RegexValidator(
                        code="invalid_pin",
                        message="PIN kód musí obsahovat přesně 4 číslice.",
                        regex="^\\d{4}$",
                    )
                ],
                verbose_name="PIN kod:",
            ),
        ),
        migrations.AlterField(
            model_name="employee",
            name="postal_code",
            field=models.CharField(
                max_length=5,
                validators=[
                    django.core.validators.MinLengthValidator(5),
                    django.core.validators.RegexValidator(
                        message="PSC musí obsahovat 5 číslic.", regex="^\\d{5}$"
                    ),
                ],
                verbose_name="PSC:",
            ),
        ),
        migrations.AlterField(
            model_name="employee",
            name="slug",
            field=models.SlugField(blank=True, unique=True, verbose_name="slug:"),
        ),
        migrations.AlterField(
            model_name="employee",
            name="street_number",
            field=models.CharField(max_length=50, verbose_name="Ulice/c.p.:"),
        ),
        migrations.AlterField(
            model_name="employee",
            name="surname",
            field=models.CharField(max_length=32, verbose_name="Prijmeni:"),
        ),
        migrations.AlterField(
            model_name="facevector",
            name="employee",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="vector",
                to="app_main.employee",
                verbose_name="Employee:",
            ),
        ),
        migrations.AlterField(
            model_name="facevector",
            name="face_vector",
            field=models.JSONField(blank=True, verbose_name="Face vector:"),
        ),
        migrations.AlterField(
            model_name="facevector",
            name="face_vector_fernet",
            field=models.BinaryField(
                blank=True, db_index=True, null=True, verbose_name="vector fernet:"
            ),
        ),
    ]
